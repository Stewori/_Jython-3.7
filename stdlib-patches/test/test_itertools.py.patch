--- lib-python/2.7/test/test_itertools.py	2015-04-18 05:34:44.587111196 +0300
+++ Lib/test/test_itertools.py	2015-04-18 05:34:31.843089859 +0300
@@ -1,5 +1,6 @@
 import unittest
 from test import test_support
+from test.test_weakref import extra_collect
 from itertools import *
 from weakref import proxy
 from decimal import Decimal
@@ -900,10 +901,18 @@
         self.assertTrue(list(t1) == list(t2) == list(t3) == list('abc'))
 
         # test that tee objects are weak referencable
-        a, b = tee(xrange(10))
-        p = proxy(a)
-        self.assertEqual(getattr(p, '__class__'), type(b))
-        del a
+        def delocalize():
+            # local variables in Jython cannot be deleted to see
+            # objects go out of scope immediately. Except for tests
+            # like this however this is not going to be observed!
+            a, b = tee(xrange(10))
+            return dict(a=a, b=b)
+
+        d = delocalize()
+        p = proxy(d['a'])
+        self.assertEqual(getattr(p, '__class__'), type(d['b']))
+        del d['a']
+        extra_collect()  # necessary for Jython to ensure ref queue is cleared out
         self.assertRaises(ReferenceError, getattr, p, '__class__')
 
     # Issue 13454: Crash when deleting backward iterator from tee()
