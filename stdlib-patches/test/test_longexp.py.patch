--- lib-python/2.7/test/test_longexp.py	2015-04-18 05:34:44.595111210 +0300
+++ Lib/test/test_longexp.py	2015-04-18 05:34:31.847089867 +0300
@@ -1,14 +1,16 @@
-import unittest
-from test import test_support
+import sys
+from test_support import TestSkipped
 
-class LongExpText(unittest.TestCase):
-    def test_longexp(self):
-        REPS = 65580
-        l = eval("[" + "2," * REPS + "]")
-        self.assertEqual(len(l), REPS)
+REPS = 65580
 
-def test_main():
-    test_support.run_unittest(LongExpText)
+#XXX: Is there a way around the method length limit in Jython?
+if sys.platform.startswith('java'):
+    raise TestSkipped, 'The 65535 byte limit on methods in the JVM is a problem for jython.'
 
-if __name__=="__main__":
-    test_main()
+if sys.platform == 'mac':
+    import gestalt
+    if gestalt.gestalt('sysv') > 0x9ff:
+        raise TestSkipped, 'Triggers pathological malloc slowdown on OSX MacPython'
+
+l = eval("[" + "2," * REPS + "]")
+print len(l)
